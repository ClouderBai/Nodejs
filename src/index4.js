const _ = require('lodash')
const moment = require('moment')
const fs = require('fs')
const xls = require('node-xlsx')
const path = require('path')
const { loadFile } = require('./common/load_file')


try {

    const __selectAction__ = loadFile('m_sales_org.txt');

    console.log(__selectAction__.length)
    const KeyMaps = {}
    
    const starIds = [

    ]
    __selectAction__.forEach(v => {
        KeyMaps[v.star_id] = starIds
    })

    const result = []
    starIds.forEach(v => {
        if(!KeyMaps[v]) {
            result.push(v)
        }
    })

    console.log('----------result-------------', result)
    console.log('----------result-------------', result)


    const pageSize = 100;

    const totalPage = Math.ceil(176 / pageSize);
    const pageIndexs = _.times(totalPage, Number);
    for (const pageIndex of pageIndexs) {
        const srcHcps = {
            skip: (pageIndex) * pageSize,
            take: pageSize,
        }
        srcHcps
    }




} catch (err) {
    console.log(err);
}